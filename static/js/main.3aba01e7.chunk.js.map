{"version":3,"sources":["components/Map/map.js","components/Home/home.js","routes.js","index.js"],"names":["Map","props","center","zoom","maxBounds","minZoom","maxZoom","TileLayer","url","attribution","countries","map","country","i","Marker","key","onclick","selectedCountry","position","countryInfo","lat","long","icon","divIcon","className","html","cases","toString","substring","length","Home","state","markers","updateSelectedCountry","setState","console","log","componentDidMount","a","axios","get","then","response","data","this","deaths","recovered","active","Component","Routes","path","exact","component","App","basename","window","location","pathname","ReactDOM","render","document","getElementById"],"mappings":"0WA+BeA,G,MAzBH,SAACC,GAOT,OACI,6BACI,kBAAC,IAAD,CAAYC,OAAQ,CAAC,QAAS,QAASC,KAAM,EAAGC,UAAW,CAAC,EAAE,IAAK,KAAK,CAAC,GAAI,MAAOC,QAAS,EAAGC,QAAS,GACrG,kBAACC,EAAA,EAAD,CACIC,IAAI,0MACJC,YAAY,2EAEfR,EAAMS,UAAUC,KAAI,SAACC,EAASC,GAAV,OACjB,kBAACC,EAAA,EAAD,CAAQC,IAAKF,EAAGG,QAAU,kBAAMf,EAAMgB,gBAAgBL,IAAWM,SAAU,CAACN,EAAQO,YAAYC,IAAKR,EAAQO,YAAYE,MAAOC,KAAMC,kBAAQ,CAAEC,UAAW,SAAUC,KAAM,UAZzKC,EAY6Ld,EAAQc,OAX5MA,EAAQ,IAAMA,EAAMC,WAAWC,UAAU,EAAGF,EAAMC,WAAWE,OAAS,GAAK,IAAMH,GAWoI,eAZ/M,IAACA,S,yBCmDPI,E,4MApDXC,MAAQ,CACJC,QAAS,CAAC,CAAC,EAAG,GAAI,CAAC,IAAK,KACxBtB,UAAW,GACXO,gBAAiB,I,EAGrBgB,sBAAwB,SAACrB,GACrB,EAAKsB,SAAS,CACVjB,gBAAiBL,IAClB,WACCuB,QAAQC,IAAI,MAAOxB,O,EAI3ByB,kB,sBAAoB,sBAAAC,EAAA,sEACVC,IAAMC,IAAN,0DACDC,MAAK,SAACC,GACH,EAAKR,SAAS,CACVxB,UAAWgC,EAASC,OACrB,WACCR,QAAQC,IAAI,YAAa,EAAKL,MAAMrB,iBANhC,2C,uDAYhB,OACI,6BACI,yBAAKc,UAAU,aACX,0BAAMA,UAAU,SAAhB,uBAEJ,kBAAC,EAAD,CAAKd,UAAWkC,KAAKb,MAAMrB,UAAWO,gBAAiB2B,KAAKX,wBAC5D,yBAAKT,UAAU,YACX,yBAAKA,UAAU,SAAUoB,KAAKb,MAAMd,gBAAkB2B,KAAKb,MAAMd,gBAAgBL,QAAU,aAC3F,yBAAKY,UAAU,cAAf,WACaoB,KAAKb,MAAMd,gBAAgBS,OAExC,yBAAKF,UAAU,eAAf,YACcoB,KAAKb,MAAMd,gBAAgB4B,QAEzC,yBAAKrB,UAAU,kBAAf,eACiBoB,KAAKb,MAAMd,gBAAgB6B,WAE5C,yBAAKtB,UAAU,eAAf,YACcoB,KAAKb,MAAMd,gBAAgB8B,c,GA9C1CC,aCQJC,E,uKARP,OACI,6BACI,kBAAC,IAAD,CAAOC,KAAM,CAAC,IAAK,SAAUC,OAAK,EAACC,UAAWtB,S,GAJzCkB,aCEfK,EAAM,WACV,OACE,kBAAC,IAAD,CAAeC,SAAUC,OAAOC,SAASC,UAAY,IACnD,kBAAC,EAAD,QAINC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.3aba01e7.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Map as LeafletMap, TileLayer, Marker, Popup } from 'react-leaflet'\r\nimport { divIcon } from 'leaflet'\r\nimport './map.css'\r\n\r\n\r\nconst Map = (props) => {\r\n\r\n    // const myIcon = divIcon({ className: \"myIcon\", html: \"<span>120</span>\" })\r\n    const casesMin = (cases) => {\r\n        return cases > 999 ? cases.toString().substring(0, cases.toString().length - 3) + \"K\" : cases\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <LeafletMap center={[28.0339, 1.6596]} zoom={2} maxBounds={[[-90, -180],[90, 180]]} minZoom={2} maxZoom={4} >\r\n                <TileLayer\r\n                    url=\"https://api.mapbox.com/styles/v1/oussamah8/ck91m060x1bk61jmleaht9pok/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1Ijoib3Vzc2FtYWg4IiwiYSI6ImNrOTFseDZxbjAxNG4zZXA0ZDRleG9nazIifQ.Hq_hv9It3ghyVJT-fJRq2g\"\r\n                    attribution=\"&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\r\n                />\r\n                {props.countries.map((country, i) => (\r\n                    <Marker key={i} onclick={ () => props.selectedCountry(country) } position={[country.countryInfo.lat, country.countryInfo.long]} icon={divIcon({ className: \"myIcon\", html: \"<span>\" + casesMin(country.cases) + \"</span>\" })}>\r\n                        {/* <Popup>Here's {country.country}</Popup> */}\r\n                    </Marker>\r\n                ))}\r\n\r\n            </LeafletMap>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Map;","import React from 'react'\r\nimport { Component } from 'react';\r\nimport Map from '../Map/map'\r\nimport './home.css'\r\nimport axios from 'axios'\r\n\r\nclass Home extends Component {\r\n\r\n    state = {\r\n        markers: [[0, 0], [12, -10]],\r\n        countries: [],\r\n        selectedCountry: {}\r\n    }\r\n\r\n    updateSelectedCountry = (country) => {\r\n        this.setState({\r\n            selectedCountry: country\r\n        }, () => {\r\n            console.log('NEW', country)\r\n        })\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        await axios.get(`https://corona.lmao.ninja/v2/countries?yesterday=false`)\r\n            .then((response) => {\r\n                this.setState({\r\n                    countries: response.data\r\n                }, () => {\r\n                    console.log('countries', this.state.countries)\r\n                })\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"mapHeader\">\r\n                    <span className=\"title\">COVID-19 STATS MAP</span>\r\n                </div>\r\n                <Map countries={this.state.countries} selectedCountry={this.updateSelectedCountry} />\r\n                <div className=\"infoCard\">\r\n                    <div className=\"title\">{ this.state.selectedCountry ? this.state.selectedCountry.country : \"Worldwide\"}</div>\r\n                    <div className=\"item cases\">\r\n                        Cases : {this.state.selectedCountry.cases}\r\n                    </div>\r\n                    <div className=\"item deaths\">\r\n                        Deaths : {this.state.selectedCountry.deaths}\r\n                    </div>\r\n                    <div className=\"item recovered\">\r\n                        Recovered : {this.state.selectedCountry.recovered}\r\n                    </div>\r\n                    <div className=\"item active\">\r\n                        Active : {this.state.selectedCountry.active}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport Home from './components/Home/home'\r\n\r\nclass Routes extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Route path={[\"/\", \"/home\"]} exact component={Home} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Routes;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter } from 'react-router-dom'\nimport Routes from './routes'\n\nconst App = () => {\n  return (\n    <BrowserRouter basename={window.location.pathname || ''}>\n      <Routes />\n    </BrowserRouter>\n  )\n}\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}